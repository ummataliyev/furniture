version: '3.8'

services:
  web:
    build: .
    container_name: ${SERVICE_NAME}
    volumes:
      - .:/app
    env_file:
      - .env
    command: ["/bin/sh", "-c", "./scripts/run.sh"]
    ports:
      - "${SERVICE_PORT}:${SERVICE_PORT}"
    depends_on:
      - db
    environment:
      VIRTUAL_HOST: ${DOMAIN},www.${DOMAIN}
      VIRTUAL_PORT: ${SERVICE_PORT}

  db:
    image: postgres:13
    container_name: postgres
    volumes:
      - db_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "5434:5432"

  nginx:
    image: jwilder/nginx-proxy
    container_name: nginx
    networks:
      - web-network
    environment:
      - DEFAULT_HOST=arzon-mebellar.uz
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro  # Docker socket for dynamic proxying
    ports:
      - "80:80"
      - "8443:443"
    restart: unless-stopped

  certbot:
    image: certbot/certbot
    container_name: certbot
    networks:
      - web-network
    volumes:
      - ./certs:/etc/letsencrypt
      - ./nginx-conf:/etc/nginx
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - DOMAIN=${DOMAIN}
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    restart: unless-stopped

volumes:
  db_data:

networks:
  web-network:
    driver: bridge
